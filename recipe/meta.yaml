{% set name = "leidenalg" %}
{% set version = "0.9.1" %}
{% set sha256 = "7e5cfe3b6f80f32b90f55f35c68d4a990b0489b1282cf3fabac8cda4988975f3" %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  fn: {{ name }}-{{ version }}.tar.gz
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: {{ sha256 }}

build:
  number: 0
  skip: true  # [win and vc<14]

  run_exports:
    - {{ pin_subpackage("leidenalg", max_pin="x.x") }}

requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}

  host:
    - igraph >=0.10,<0.11
    - python
    - setuptools
    - setuptools_scm
    - pip
  run:
    - igraph
    - python-igraph
    - python
    - pip

test:
  requires:
    - ddt
  source_files:
    - tests
  imports:
    - leidenalg
  commands:
    - python -m unittest -v --locals

about:
  home: https://github.com/vtraag/leidenalg
  license: GPL-3.0-or-later
  license_family: GPL
  license_file: LICENSE
  summary: Implementation of the Leiden algorithm for various methods for use with igraph in python.
  description: |
    This package implements the Leiden algorithm in C++ and
    exposes it to python. It relies on (python-)igraph for it to
    function. Besides the relative flexibility of the
    implementation, it also scales well, and can be run on graphs
    of millions of nodes (as long as they can fit in memory).
    The core function is find_partition which is able to optimize a
    variety of quality functions using the Leiden algorithm.
  doc_url: http://leidenalg.readthedocs.io/
  dev_url: https://github.com/vtraag/leidenalg

extra:
  recipe-maintainers:
    - vtraag
